apiVersion: v1
kind: Namespace
metadata:
  name: to-do
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-project-dep
  namespace: to-do
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-project
  template:
    metadata:
      labels:
        app: k8s-project
    spec:
      containers:
        - name: k8s-project
          image: josephshih13/k8s-project
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: k8s-project-ingress
  namespace: to-do
spec:
  rules:
  - http:
      paths:
      - path: /
        backend:
          serviceName: k8s-project-svc
          servicePort: 4567
          env:
          - name: DB_URL
            value: "postgresql://postgres:example@postgres-svc.ping-pong:5432/postgres"
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-project-svc
  namespace: to-do
spec:
  type: ClusterIP
  selector:
    app: k8s-project
  ports:
    - port: 4567
      protocol: TCP
      targetPort: 9936
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-svc
  namespace: to-do
  labels:
    app: postgres
spec:
  ports:
  - port: 5432
    name: web
  clusterIP: None
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-ss
  namespace: to-do
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:13.0
          ports:
            - name: postgres
              containerPort: 5432
          env:
          - name: POSTGRES_PASSWORD
            value: "example"
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: local-path
        resources:
          requests:
            storage: 100Mi